# CELL 5: VAE Model - Recreated with Improved Parameters

# Recreate VAE model with improved diversity configuration
print("ðŸ”„ Creating VAE model with improved diversity parameters...")
print(f"New LATENT_DIM: {config.LATENT_DIM}")
print(f"New LEARNING_RATE: {config.LEARNING_RATE}")
print(f"New BETA_KL: {config.BETA_KL}")

vae_model = DatabricksVAE(
    input_dim=processor.get_feature_dim(),
    latent_dim=config.LATENT_DIM,
    encoder_layers=config.ENCODER_LAYERS,
    decoder_layers=config.DECODER_LAYERS,
    learning_rate=config.LEARNING_RATE,
    beta_kl=config.BETA_KL
)

print("âœ… VAE model recreated with improved parameters for diversity")
print(f"Model ready for training on {len(original_data):,} samples")





# CELL 6: Train VAE Model - Corrected Version

import datetime

# Ensure we're using the real dataset
print(f"Original data shape: {original_data.shape}")
print(f"Processed data shape: {processed_data.shape}")

# Normalize data for training
train_data = (processed_data - processed_data.min()) / (processed_data.max() - processed_data.min() + 1e-8)

print("ðŸš€ Starting VAE training with improved parameters...")
print(f"Training data shape: {train_data.shape}")

# Train the model
start_time = datetime.datetime.now()
history = vae_model.train(train_data)
end_time = datetime.datetime.now()

training_duration = (end_time - start_time).total_seconds() / 60
print(f"\nâœ… Training completed in {training_duration:.1f} minutes")

# Plot training history if available
if hasattr(history, 'history') and 'loss' in history.history:
    final_loss = min(history.history['loss'])
    print(f"Final training loss: {final_loss:.4f}")
    
    plt.figure(figsize=(10, 4))
    plt.plot(history.history['loss'], label='Training Loss', linewidth=2)
    plt.title('VAE Training Loss')
    plt.xlabel('Epoch')
    plt.ylabel('Loss')
    plt.legend()
    plt.grid(True, alpha=0.3)
    plt.show()

print(f"\nðŸŽ‰ VAE model training successful! Ready to generate synthetic data.")s
